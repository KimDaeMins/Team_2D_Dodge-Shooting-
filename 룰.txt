1. 총알을 쏘는건 플레이어와 몬스터이다 -> 방향 위치까지 넘겨서 생성 (IFire 인터페이스를 끼고있는녀석들)
2. 움직임은 자기 자신이 한다
3. 총알을 어떻게 쏠지는 각 구현자와 불릿 구현자의 상의
4. 객체의 체력을 닳게하거나 Dead변수를 수정하는건(IsDead = true) 다른객체에서 가능하다.
5. 객체를 죽이는건(Distroy) 자기자신만 가능하다.(예외상황은 상의 후 결정)
6. 각 구현에 맞춰 Tag와 Layout을 설정해주어야한다.
7. ★★★몬스터, 총알, 아이템 은 기능이 다르면 switch나 bool이 아닌 스크립트로 분기한다.
8. 병합충돌을 방지하기 위하여 샘플씬은 병합하지 않는다
9.★★★★★ 함수 하나를 구현했든 객체 하나를 구현했든 10분이상 개발을 멈추게된다면 깃 푸쉬 후 멈춘다.
10. 상대 객체가 죽었는지 판단은 LateUpdate에서 한다
11. ★★오브젝트를 만들면 무조건 Prefab화 한다.
12. ★★★ 런타임 객체생성은 Managers.Resource.Instantiate("프리펩이름", 각종인자); 를 이용한다.
13. ★★★ 런타임에 생성된 객체는 무조건 Managers.Distroy(this.gameObject)로 지워주어야한다.
14. ★★★ Bullet이나 Monster는 AddComponent에서 Poolable스크립트를 꼭 넣어야한다.
15. ★★★★★ 만들다가 모르거나 이해안되는것이 있으면 10분정도 직접찾아보고 그래도안되면 물어본다(마지노선 10분)
16. ★Util에 있는 함수들을 익혀두면 좋다.
17. ★ 유니티 에디터에서 드래그앤드랍으로 컴포넌트에 값을 할당하는건 최대한 자제한다.
	-> Util.GetOrAddComponent<가져올컴포넌트>(갖고있는게임오브젝트)로 컴포넌트를 가져오는 방식을 주로 쓰자.
18. ★ 멤버접근지정자(public, private) 신경써서 만들어줘야한다 왠만하면 private를 주로써주었으면 좋겠어용
19. 함수 하나하나는 최대한 간결하게 하나의 기능만 넣고 하나의 기능만 넣은 녀석들을 유기적으로 조합하는 형태가 좋다.

★★★★★ 표기법 규칙!!!!! ★★★★★
- 클래스 내부의 멤버변수 - _memberVariable - 언더바와 첫단어 소문자 다음단어부턴 대문자
- 함수 내부의 지역변수 - localVariable - 첫단어 소문자 다음단어부터 대문자
- 클래스 내부의 프로퍼티(get;set;) - PropertyValue - 첫단어 대문자 단어마다 대문자
- 클래스 이름 - ClassName - 첫단어 대문자 단어마다 대문자
- 함수 이름 - FuncName - 첫단어 대문자 단어마다 대문자
- 함수 인자 이름 - funcValue - 첫단어 소문자 다음단어부터 대문자
- 열거형 이름 - EnumName - 첫단어 대문자 단어마다 대문자
- 열거형 변수 이름 - 자유
- static멤버변수 - s_memverVariable - s_첫단어 소문자 다음단어부터 대문자
- 컨테이너 (Dictionary, List, Stack등) - _containers | containers - 위의 상황에 맞게 짜되 마지막에 s를 붙여준다


+ IFire를 코루틴 사용 방식으로 변경하면서 플레이어의 Fire함수와 FireUpdate함수가 바뀌었습니다 확인해주세요
+ 월요일날 코드카타 검사 오후1시

각자 해주어야할것 월~

